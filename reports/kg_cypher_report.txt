MATCH(n:Class)-[:SUBCLASSOF]->(cl_parent:Class) WHERE n.curie STARTS WITH "PCL:" and n.definition IS NOT NULL and cl_parent.curie STARTS WITH "CL:" and NOT cl_parent.label = "central nervous system neuron"
WITH n, cl_parent
OPTIONAL MATCH (n)-[has_exemplar_data]->(indv:Individual)
OPTIONAL MATCH (n)-[loc:some_soma_located_in]->(region:Brain_Region)
OPTIONAL MATCH (n)-[e:expresses]->(marker:Gene)
OPTIONAL MATCH (n)-[ms:has_characterizing_marker_set]->(markerSet)
RETURN DISTINCT	indv.short_form AS accession_id,
	n.curie as PCL_id,
	n.label as label,
	apoc.text.join(COLLECT(DISTINCT cl_parent.label), ", ") as cl_parents,
	apoc.text.join(COLLECT(DISTINCT cl_parent.curie), ", ") as cl_parents_curie,
	apoc.convert.fromJsonMap(n.definition[0])["value"] as definition,
	apoc.text.join(apoc.convert.fromJsonMap(n.definition[0])["annotations"]["database_cross_reference"],",") as definition_ref,
	apoc.text.join(COLLECT(DISTINCT region.label), ", ") as brain_region,
	apoc.text.join(COLLECT(DISTINCT region.curie), ", ") as brain_region_curie,
	apoc.text.join(COLLECT(DISTINCT loc.comment[0]), " ") as brain_region_evidence,
	apoc.text.join(COLLECT(DISTINCT marker.label), ", ") as markers,
	markerSet.fbeta_confidence_score[0] as marker_fbeta_score
ORDER BY toInteger(replace(n.curie,"PCL:",""))